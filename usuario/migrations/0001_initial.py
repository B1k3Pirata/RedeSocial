# Generated by Django 3.2.8 on 2021-11-06 14:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=6, verbose_name='matrícula')),
                ('ano_matricula', models.CharField(max_length=4, verbose_name='ano de matrícula')),
                ('nivel', models.CharField(choices=[('fundamental', 'fundamental'), ('médio', 'médio')], max_length=20, verbose_name='nível')),
            ],
            options={
                'verbose_name': 'Matricula',
            },
        ),
        migrations.CreateModel(
            name='UsrLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.CharField(max_length=10)),
                ('senha', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'UsrLog',
            },
        ),
        migrations.CreateModel(
            name='UsrCad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.CharField(max_length=10)),
                ('senha', models.CharField(max_length=64)),
                ('email', models.CharField(max_length=30)),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'UsrCad',
            },
        ),
        migrations.CreateModel(
            name='Transp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pprte', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='Poder Público Responsável Pelo Transporte Escolar')),
                ('pbfa', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='é atendido(a) pelo PBF(Programa Bolsa Familia)')),
                ('qserv', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='você utiliza esse serviço?')),
                ('urb', models.CharField(choices=[('RU', 'Rural/Urbano'), ('UR', 'Urbano/Rural'), ('RR', 'Rural/Rural'), ('UU', 'Urbana/Urbana')], max_length=10, verbose_name='urbano/rural')),
                ('rod', models.CharField(choices=[('Não Uso', 'Não Uso'), ('VK', 'Vans/Kombi'), ('Mo', 'Urbano/Rural'), ('BK', 'Bicicleta'), ('On', 'Ônibus'), ('An', 'Animal'), ('Ot', 'Outro')], max_length=10, verbose_name='rodoviário')),
                ('aqua', models.CharField(choices=[('Não Uso', 'Não Uso'), ('C5', 'Cap. de até 5 anos'), ('C105', 'Cap. de 5 a 105 anos'), ('C105', 'Cap. de até 105 a105 anos'), ('C105+', 'Cap. acima de 105 anos')], max_length=10, verbose_name='aquaviário/embarcação')),
                ('trm', models.CharField(choices=[('Não Uso', 'Não Uso'), ('Trem', 'Trem/Metrô')], max_length=10, verbose_name='trem/metrô')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Transporte',
            },
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bcp', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='é atendido(a) pelo BCP(Benefício de Prestação Continuada)?')),
                ('pbf', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='é atendido(a) pelo PBF(Programa Bolsa Familia)?')),
                ('pbt', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='é atendido pelo PBT(Programa Bolsa Trabalho)?')),
                ('peti', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='é atendido(a) pelo PETI(Programa de Erradicação do Trabalho Infantil)')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Social',
            },
        ),
        migrations.CreateModel(
            name='Sau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aep', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='necessita de atendimento especializado(Apoio Pedagógico?)')),
                ('cego', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10)),
                ('bv', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='baixa visão')),
                ('sc', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='surdo-cegueira')),
                ('sd', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='surdez')),
                ('da', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='deficiência auditiva')),
                ('di', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='deficiência intelectual')),
                ('dm', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='deficiências multiplas')),
                ('df', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='deficiêcnia física')),
                ('ai', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='autismo infantil')),
                ('srt', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='síndrome de Rett')),
                ('sasp', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='síndrome de Asperger')),
                ('tdi', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='transtorno desintegrativo da infância')),
                ('ahs', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='altas habilidades/superdotação')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Saúde',
            },
        ),
        migrations.CreateModel(
            name='Proc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nesc', models.CharField(max_length=1055, verbose_name='nome da escola')),
                ('pore1a', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='', max_length=10, verbose_name='procedente de outra rede de ensino, após a 1ª avaliação, com parãmetros diferenciados da SEDUC?')),
                ('pore2a', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='', max_length=10, verbose_name='recebido(a) na 2ª avaliação')),
                ('pore3a', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='', max_length=10, verbose_name='recebido(a) na 3ª avaliação')),
                ('pore4a', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='', max_length=10, verbose_name='recebido(a) na 4ª avaliação')),
                ('comec', models.CharField(max_length=100, verbose_name='código MEC')),
                ('anx', models.CharField(max_length=1055, verbose_name='anexo')),
                ('idtnv', models.CharField(max_length=100, verbose_name='nível')),
                ('fase', models.CharField(max_length=100, verbose_name='fase')),
                ('turno', models.CharField(max_length=100, verbose_name='turno')),
                ('modal', models.CharField(max_length=100, verbose_name='modalidade')),
                ('seq', models.CharField(max_length=100, verbose_name='sequencial (0 a 99)')),
                ('rat', models.CharField(choices=[('H', 'Hospital'), ('D', 'Domicílio'), ('N', 'Não Recebe')], max_length=10, verbose_name='recebe escolarização em outro espaço(diferente da escola)?')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Procedência',
            },
        ),
        migrations.CreateModel(
            name='Pessoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dnasc', models.DateField(verbose_name='data de nascimento')),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('N', 'Nenhuma das Opções')], max_length=10)),
                ('raca', models.CharField(choices=[('I', 'Indigena'), ('N', 'Negro(a)'), ('P', 'Pardo(a)'), ('A', 'Amarelos(as)'), ('B', 'Branco(as)')], max_length=10, verbose_name='raça')),
                ('qprenm', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='deseja usar pré-nome social?')),
                ('prenm', models.CharField(max_length=255, verbose_name='digite o seu pré-nome social, caso possua.')),
                ('nacio', models.CharField(choices=[('Bra', 'Brasileiro(a)'), ('Est', 'Estrangeiro(a)')], max_length=10, verbose_name='nacionalidade')),
                ('qnacio', models.CharField(max_length=255, verbose_name='nacionalidade')),
                ('ufnasc', models.CharField(choices=[('PA', 'PA'), ('AM', 'AM'), ('AC', 'AC'), ('AP', 'AP'), ('RR', 'RR'), ('MA', 'MA'), ('TO', 'TO'), ('AL', 'AL'), ('PE', 'PE'), ('GO', 'GO'), ('ES', 'ES'), ('BA', 'BA'), ('MT', 'MT'), ('MS', 'MS'), ('MG', 'MG'), ('PR', 'PR'), ('PI', 'PI'), ('RJ', 'RJ'), ('RN', 'RN'), ('RS', 'RS'), ('RO', 'RO'), ('SC', 'SC'), ('SP', 'SP'), ('SE', 'SE')], max_length=10, verbose_name='UF de nascimento')),
                ('locnasc', models.CharField(max_length=255, verbose_name='local de nascimento')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Pessoal',
            },
        ),
        migrations.CreateModel(
            name='Imagens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.FileField(blank=True, upload_to='avatar')),
                ('dochist', models.FileField(blank=True, upload_to='historico')),
                ('docRG', models.FileField(blank=True, upload_to='rg')),
                ('docRG2', models.FileField(blank=True, upload_to='rg')),
                ('docCPF', models.FileField(blank=True, upload_to='cpf')),
                ('docRes', models.FileField(blank=True, upload_to='comprovaResid')),
                ('docCert', models.FileField(blank=True, upload_to='certificaFund')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Imagens',
            },
        ),
        migrations.CreateModel(
            name='End',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end', models.CharField(max_length=1055, verbose_name='endereço residêncial')),
                ('num', models.CharField(max_length=7, verbose_name='número')),
                ('muni', models.CharField(max_length=1055, verbose_name='município')),
                ('cep', models.CharField(max_length=105, verbose_name='C.E.P')),
                ('comp', models.CharField(max_length=1055, verbose_name='complemento')),
                ('brr', models.CharField(max_length=1055, verbose_name='bairro')),
                ('uncon', models.CharField(max_length=105, verbose_name='Unidade Consumidora(CELPA)')),
                ('qzon', models.CharField(choices=[('U', 'Urbana'), ('R', 'Rural')], max_length=10, verbose_name='zona')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Endereço',
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qpcer', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='Possui Certidão?')),
                ('tpcerl', models.CharField(choices=[('Nasc', 'Nascimento'), ('Casa', 'Casamento'), ('Divo', 'Divórcio')], max_length=10, verbose_name='Tipo de certidão')),
                ('nocer', models.CharField(max_length=255, verbose_name='número da certidão')),
                ('licer', models.CharField(max_length=105, verbose_name='livro da certidão')),
                ('flcer', models.CharField(max_length=105, verbose_name='folha da certidão')),
                ('emtcr', models.CharField(max_length=105, verbose_name='data de emissão da certidão')),
                ('cartc', models.CharField(max_length=105, verbose_name='cartório de registro')),
                ('ufcrt', models.CharField(choices=[('PA', 'PA'), ('AM', 'AM'), ('AC', 'AC'), ('AP', 'AP'), ('RR', 'RR'), ('MA', 'MA'), ('TO', 'TO'), ('AL', 'AL'), ('PE', 'PE'), ('GO', 'GO'), ('ES', 'ES'), ('BA', 'BA'), ('MT', 'MT'), ('MS', 'MS'), ('MG', 'MG'), ('PR', 'PR'), ('PI', 'PI'), ('RJ', 'RJ'), ('RN', 'RN'), ('RS', 'RS'), ('RO', 'RO'), ('SC', 'SC'), ('SP', 'SP'), ('SE', 'SE')], max_length=10, verbose_name='UF do cartório')),
                ('cidcrt', models.CharField(max_length=105, verbose_name='cidade do cartório')),
                ('qrg', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=10, verbose_name='possui R.G?')),
                ('norg', models.CharField(max_length=105, verbose_name='número do R.G')),
                ('orgrg', models.CharField(max_length=105, verbose_name='Órgão emissor')),
                ('ufrg', models.CharField(choices=[('PA', 'PA'), ('AM', 'AM'), ('AC', 'AC'), ('AP', 'AP'), ('RR', 'RR'), ('MA', 'MA'), ('TO', 'TO'), ('AL', 'AL'), ('PE', 'PE'), ('GO', 'GO'), ('ES', 'ES'), ('BA', 'BA'), ('MT', 'MT'), ('MS', 'MS'), ('MG', 'MG'), ('PR', 'PR'), ('PI', 'PI'), ('RJ', 'RJ'), ('RN', 'RN'), ('RS', 'RS'), ('RO', 'RO'), ('SC', 'SC'), ('SP', 'SP'), ('SE', 'SE')], max_length=10, verbose_name='UF do Órgão Emissor')),
                ('dtrg', models.CharField(max_length=105, verbose_name='data de emissão do R.G')),
                ('cpf', models.CharField(max_length=105, verbose_name='C.P.F.')),
                ('pasp', models.CharField(max_length=105, verbose_name='passaporte')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Documento',
            },
        ),
        migrations.CreateModel(
            name='DocPessoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rg', models.CharField(max_length=20, verbose_name='R.G.')),
                ('cpf', models.CharField(max_length=11, verbose_name='C.P.F.')),
                ('filia1', models.CharField(max_length=30, verbose_name='filiação_1')),
                ('filia2', models.CharField(max_length=30, verbose_name='filiação_2')),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'DocPessoal',
            },
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(blank=True, max_length=10)),
                ('celular', models.CharField(max_length=11)),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'Contato',
            },
        ),
        migrations.CreateModel(
            name='AlunoDados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='nome completo')),
                ('snome', models.CharField(max_length=255, verbose_name='sobrenome completo')),
                ('dataMat', models.DateTimeField(auto_now_add=True)),
                ('matric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuario.matricula')),
            ],
            options={
                'verbose_name': 'AlunoDados',
            },
        ),
    ]
